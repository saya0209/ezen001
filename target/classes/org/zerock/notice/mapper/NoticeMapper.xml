<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.notice.mapper.NoticeMapper">

  <!-- 1-1. getTotalRow -->
  <select id="getTotalRow" resultType="Long">
    select count(*) from notice
    <include refid="period"/>
  </select>

  <!-- 1-2. list -->
  <select id="list" resultType="org.zerock.notice.vo.NoticeVO">
    select
      notice_no, writer_id, title, startDate, endDate, writeDate, files
    from
    (
      select
        rownum rnum, notice_no, writer_id, title, startDate, endDate, writeDate, files
      from
      (
        select
          notice_no, writer_id, title, startDate, endDate, writeDate, files
        from
          notice
        <include refid="period"></include>
        order by notice_no desc
      )
    )
    where rnum between #{startRow} and #{endRow} 
  </select>

  <!-- 공지기간에 따른 처리 -->
  <sql id="period">
    <trim prefix="where" prefixOverrides="and">
      <if test="period.equals('pre')">
        and trunc(sysdate) between trunc(startDate) and trunc(endDate)
      </if>
      <if test="period.equals('old')">
        <![CDATA[and trunc(sysdate) > trunc(endDate)]]>
      </if>
      <if test="period.equals('res')">
        and trunc(sysdate) &lt; trunc(startDate)
      </if>
    </trim>
  </sql>

  <!-- 2. view -->
  <select id="view" resultType="org.zerock.notice.vo.NoticeVO">
    select notice_no, writer_id, title, content, startDate, endDate, writeDate, updateDate, files 
    from notice where notice_no = #{notice_no, jdbcType=BIGINT}
  </select>

  <!-- 3. write -->
	<insert id="write">
	  <selectKey keyProperty="notice_no" resultType="Long" order="BEFORE">
	    <!-- 오라클에서 시퀀스를 사용하여 notice_no 생성 -->
	    select notice_seq.nextval from dual
	  </selectKey>
	  insert into notice(notice_no, writer_id, title, content, startDate, endDate, writeDate, files)
	  values(
	    #{notice_no, jdbcType=BIGINT}, 
	    #{writer_id}, 
	    #{title}, 
	    #{content}, 
	    #{startDate, jdbcType=DATE}, 
	    #{endDate, jdbcType=DATE}, 
	    sysdate, 
	    <if test="files != null">#{files, jdbcType=VARCHAR}</if>
	    <if test="files == null">NULL</if>)
	</insert>


  <!-- 4. update -->
	<update id="update">
	  update notice set
	    title = #{title},
	    content = #{content},
	    startDate = #{startDate, jdbcType=DATE},
	    endDate = #{endDate, jdbcType=DATE},
	    files = 
	      <if test="files != null">
	        #{files, jdbcType=VARCHAR}
	      </if>
	      <if test="files == null">
	        NULL
	      </if>
	  where notice_no = #{notice_no, jdbcType=BIGINT}
	</update>

  <!-- 5. delete -->
  <delete id="delete">
    delete from notice
    where notice_no = #{notice_no, jdbcType=BIGINT}
  </delete>

</mapper>
