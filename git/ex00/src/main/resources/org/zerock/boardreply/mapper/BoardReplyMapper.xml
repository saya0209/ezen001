<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="org.zerock.boardreply.mapper.BoardReplyMapper">
  	<!-- 일반 게시판 댓글 리스트 페이지 처리를 위한 전체 데이터 개수(글번호)를 가져오는 쿼리 -->
  	<select id="getTotalRow" resultType="Long">
  		select count(*)
  		from board_reply
  		where no = #{no}
  	</select>
  	<!-- 일반 게시판 댓글 리스트 쿼리 -->
  	<select id="list" resultType="org.zerock.boardreply.vo.BoardReplyVO">
  		select rno, no, content, id, name, writeDate
  		from
  		(
	  		select rownum rnum, rno, no, content, id, name, writeDate
	  		from
	  		(
			  	select b.rno, b.no, b.content, b.id, m.name, b.writeDate
			  	from board_reply b, member m
			  	where
			  		(no = #{no}) <!-- 일반조건 -->
			  		and
			  		(b.id = m.id) <!-- 조인조건 -->
			  	order by rno desc
		  	)
	  	)
	  	where rnum between #{pageObject.startRow} and #{pageObject.endRow}
  	</select>
  	

	<!-- 일반 게시판 댓글쓰기 쿼리 -->
	<insert id="write">
		<!-- keyPorperty: 사용변수이름(BoardReplyVO), resultType: 변수에 담기는 값 자료형 
			order="BEFORE" => 먼저실행한다. -->
		<!-- BoardVO 에 있는 no에 setter를 이용해서 시퀀스에 있는 값을 세팅 -->
		<selectKey keyProperty="rno" resultType="Long" order="BEFORE">
			<!-- dual 은 더미테이블이다. : 테이블이 없는 값을 가져올때 사용 -->
			select board_reply_seq.nextval from dual
		</selectKey>
		insert into board_reply(rno, no, content, id)
		values(#{rno}, #{no}, #{content}, #{id})
	</insert>
	
	<!-- 일반 게시판 댓글수정 쿼리 -->
	<update id="update">
	<!-- ![CDATA[]] 를 사용하면 특수문자를 string으로 인식하게 만들어준다. -->
	<![CDATA[
		update board_reply
		set content = #{content}
		where rno = #{rno} and id = #{id}
	]]>
	</update>
	
	<!-- 일반 게시판 댓글삭제 쿼리 -->
	<delete id="delete">
		delete from board_reply
		where rno = #{rno} and id = #{id}
	</delete>

  </mapper>
  
  
  
  
  
  