<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE 
	mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.community.mapper.CommunityMapper">

	<!-- 커뮤니티 게시판 리스트 쿼리 -->
	<select id="list" resultType="org.zerock.community.vo.CommunityVO">
	    select community_no, id, nicname, title, content, writeDate, hit, 
	    	updateDate, likeCnt, dislikeCnt, image
	    from (
	        select rownum rnum, community_no, id, nicname, title, content, writeDate, hit, 
	        	updateDate, likeCnt, dislikeCnt, image
	        from (
	            select c.community_no, c.id, m.nicname, c.title, c.content, c.writeDate, c.hit, 
	            c.updateDate, c.likeCnt, c.dislikeCnt, c.image
	            from community c, member m
	            where 
	                c.id = m.id <!-- 조인조건 -->
	                <!-- 검색을 달아야 한다. -->
	                <include refid="search"></include>
	            order by c.community_no desc
	        )
	    )
	    where rnum between #{startRow} and #{endRow}
	</select>


	<!-- 커뮤니티 게시판 리스트 페이지 처리를 위한 전체 데이터 개수를 가져오는 쿼리 -->
	<select id="getTotalRow" resultType="Long">
		select count(*)
		from community c
		<include refid="search" />
		<!-- <include refid="search"></include> -->
	</select>

	<!-- 커뮤니티 게시판 리스트 검색 처리 -->
	<sql id="search">
		<if test="word != null and word != ''.toString()">
			<trim prefix="where" prefixOverrides="or">
				<if test="key.indexOf('t') >= 0">
					or title like '%' || #{word} || '%'
				</if>
				<if test="key.indexOf('c') >= 0">
					or content like '%' || #{word} || '%'
				</if>
				<if test="key.indexOf('w') >= 0">
					or id like '%' || #{word} || '%'
				</if>
			</trim>
		</if>
	</sql>

	<!-- 커뮤니티 게시판 글보기 -->
	<!-- 조회수 증가 쿼리 -->
	<update id="increase">
		update community set hit = hit + 1
		where community_no = #{community_no}
	</update>

	<!-- 글보기 (글 정보 가져오기) 쿼리 -->
	<select id="view" resultType="org.zerock.community.vo.CommunityVO">
	    select c.community_no, c.id, m.nicname, c.title, c.content, c.writeDate, c.hit, 
	    	c.updateDate, c.likeCnt, c.dislikeCnt, c.image
	    from community c
	    JOIN member m ON c.id = m.id  <!-- member 테이블과 조인하여 nicname 가져오기 -->
	    where c.community_no = #{community_no}
	</select>

	<!-- 커뮤니티 게시판 글쓰기 쿼리 -->
	<insert id="write">
    <selectKey keyProperty="community_no" resultType="Long" order="BEFORE">
        select community_seq.nextval from dual
    </selectKey>
    insert into community(
        community_no, id, title, content, image, writeDate, hit, likeCnt, dislikeCnt)
    values(#{community_no}, #{id,jdbcType=VARCHAR}, #{title}, #{content}, #{image}, 
    	#{writeDate}, #{hit}, #{likeCnt}, #{dislikeCnt})
	</insert>
	

	<!-- 커뮤니티 게시판 글수정 쿼리 -->
	<update id="update">
	    <![CDATA[
	    update community
	    set title = #{title}, content = #{content}, image = #{image}
	    where community_no = #{community_no} and id = #{id}
	    ]]>
	</update>

	<!-- 커뮤니티 게시판 글삭제 쿼리 -->
	<delete id="delete">
	    delete from community
	    where community_no = #{community_no} and id = #{id}
	</delete>
	
	<!-- 좋아요 증가 쿼리 -->
	<update id="increaseLike" parameterType="Long">
	    update community
	    set likeCnt = likeCnt + 1
	    where community_no = #{community_no}
	</update>
	
	<!-- 싫어요 증가 쿼리 -->
	<update id="increaseDislike" parameterType="Long">
	    update community
	    set dislikeCnt = dislikeCnt + 1
	    where community_no = #{community_no}
	</update>
	
	<!-- 좋아요 취소 쿼리 -->
	<update id="cancelLike" parameterType="Long">
		update community
		set likeCnt = case
		when likeCnt > 0 then likeCnt - 1
		else 0
		end
		where community_no = #{community_no}
	</update>
	
	<!-- 싫어요 취소 쿼리 -->
	<update id="cancelDislike" parameterType="Long">
		update community
		set dislikeCnt = case
		when dislikeCnt > 0 then dislikeCnt - 1
		else 0
		end
		where community_no = #{community_no}
	</update>


</mapper>
